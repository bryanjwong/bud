[{"/Users/Kat/bud/docs/web/src/index.js":"1","/Users/Kat/bud/docs/web/src/App.js":"2","/Users/Kat/bud/docs/web/src/reportWebVitals.js":"3","/Users/Kat/bud/docs/web/src/Components/HomePage.js":"4","/Users/Kat/bud/docs/web/src/Components/ActivityLog.js":"5","/Users/Kat/bud/docs/web/src/Components/Dashboard.js":"6","/Users/Kat/bud/docs/web/src/Components/Status.js":"7","/Users/Kat/bud/docs/web/src/Components/Graph.js":"8","/Users/Kat/bud/docs/web/src/Components/Metric.js":"9"},{"size":500,"mtime":1610772004040,"results":"10","hashOfConfig":"11"},{"size":140,"mtime":1610772734368,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610772004042,"results":"13","hashOfConfig":"11"},{"size":559,"mtime":1610781450617,"results":"14","hashOfConfig":"11"},{"size":1468,"mtime":1610787282357,"results":"15","hashOfConfig":"11"},{"size":2520,"mtime":1610822025922,"results":"16","hashOfConfig":"11"},{"size":878,"mtime":1610787186312,"results":"17","hashOfConfig":"11"},{"size":3232,"mtime":1610788687411,"results":"18","hashOfConfig":"11"},{"size":1556,"mtime":1610788678947,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16khs0y",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/Kat/bud/docs/web/src/index.js",[],["42","43"],"/Users/Kat/bud/docs/web/src/App.js",[],"/Users/Kat/bud/docs/web/src/reportWebVitals.js",[],"/Users/Kat/bud/docs/web/src/Components/HomePage.js",["44"],"import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ActivityLog from \"./ActivityLog\";\nimport Dashboard from \"./Dashboard\";\n\nconst useStyles = makeStyles(\n    \n);\n\nfunction HomePage() {\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n            <Grid item xs={12} lg={4}>\n                <ActivityLog />\n            </Grid>\n            <Grid item xs={12} lg={8}>\n                <Dashboard />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default HomePage;","/Users/Kat/bud/docs/web/src/Components/ActivityLog.js",["45"],"import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Status from './Status';\nimport budLogo from '../bud.png';\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: \"#94B143\",\n        padding: \"30px 35px\",\n        height: \"100vh\",\n    },\n    header: {\n        color: \"white\",\n        fontSize: 20,\n        margin: \"0 0 50px 0\",\n    },\n    labels: {\n        color: \"white\",\n        marginBottom: 10,\n        fontSize: 16,\n        paddingLeft: 30,\n    },\n    footer: {\n        position: \"fixed\",\n        left: 0,\n        bottom: 0,\n        width: \"100%\",\n        color: \"white\",\n        marginLeft: 25,\n        fontWeight: \"bold\",\n    },\n    logo: {\n        width: \"40px\",\n        height: \"40px\"\n    }\n});\n\nfunction ActivityLog() {\n    const classes = useStyles();\n\n    return (\n    <Grid className={classes.root}>\n        <h6 className={classes.header}>Activity Log</h6>\n        <Grid container>\n            <Grid item xs={8} className={classes.labels}>Status</Grid>\n            <Grid item xs={4} className={classes.labels}>Time</Grid>\n        </Grid>\n        <Status />\n        <Status />\n        <Status />\n        <div className={classes.footer}>\n            <Grid container>\n                <img src={budLogo} className={classes.logo}/>\n                <h2 style={{margin: \"10px 5px\"}}>bud</h2>\n            </Grid>\n        </div>\n    </Grid>\n    )\n}\n\nexport default ActivityLog;","/Users/Kat/bud/docs/web/src/Components/Dashboard.js",[],"/Users/Kat/bud/docs/web/src/Components/Status.js",[],"/Users/Kat/bud/docs/web/src/Components/Graph.js",["46"],"import { makeStyles } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chart from \"chart.js\"\n\n//--Chart Style Options--//\nChart.defaults.global.defaultFontFamily = \"Poppins\"\nChart.defaults.global.legend.display = false;\nChart.defaults.global.elements.line.tension = 0.5;\n//--Chart Style Options--//\n\nconst useStyles = makeStyles({\n});\n\nfunction Graph() {\n    const classes = useStyles();\n    const chartRef = React.createRef();\n    \n    var lookbackPeriod = 60000; // 1 Hour\n    const min_t = Date.parse(\"2021-01-15T22:26:57Z\") - lookbackPeriod;\n    const newDate = new Date(min_t);\n    console.log(newDate);\n    useEffect(() => {\n        const myChartRef = chartRef.current.getContext(\"2d\");\n        const {width: graphWidth} = myChartRef.canvas;\n        let gradientLine = myChartRef.createLinearGradient(0, 0, graphWidth * 2, 0);\n        gradientLine.addColorStop(0, \"#60BCB9\");\n        gradientLine.addColorStop(1, \"#7ACEFA\");\n        new Chart(myChartRef, {\n            type: \"line\",\n            data: {\n                //Bring in data\n                // labels: [min_t, \"2021-01-15T22:26:57Z\"],\n                datasets: [\n                    {\n                        label: \"Humidity\",\n                        data: [{\n                            t: \"2021-01-15T22:24:47\",\n                            y: 43\n                        },\n                        {\n                            t: \"2021-01-15T22:25:52\",\n                            y: 51\n                        },\n                        {\n                            t: \"2021-01-15T22:26:57\",\n                            y: 46\n                        }],\n                        fill: false,\n                        borderColor: gradientLine,\n                    }\n                ]\n            },\n            options: {\n                //Customize chart options\n                responsive: true,\n                maintainAspectRatio: true,\n                scales: {\n                    xAxes: [{\n                        type: 'time',\n                        time: {\n                            unit: 'minute',\n                            tooltipFormat: \"MMM D, h:mm a\"\n                        },\n                        bounds: 'data',\n                        ticks: { display: true },\n                        gridLines: {\n                            display: false,\n                            drawBorder: true\n                        }\n                    }],\n                    yAxes: [{     \n                        ticks: { \n                            display: true,\n                            suggestedMin: 30,\n                            suggestedMax: 80, \n                        },\n                        gridLines: {\n                            display: true,\n                            drawBorder: false\n                        },\n                    }]\n                }\n            }\n        }); \n    });\n\n    return (\n    <Grid container>\n        <Grid item xs={10}>\n            <div>\n                <canvas\n                    id=\"myChart\"\n                    ref={chartRef}\n                />\n            </div>\n        </Grid>\n    </Grid>\n    );\n}\n\nexport default Graph;","/Users/Kat/bud/docs/web/src/Components/Metric.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":11,"nodeType":"53","messageId":"54","endLine":12,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":54,"column":17,"nodeType":"57","endLine":54,"endColumn":62},{"ruleId":"51","severity":1,"message":"52","line":16,"column":11,"nodeType":"53","messageId":"54","endLine":16,"endColumn":18},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]